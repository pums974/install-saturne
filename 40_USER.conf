#! /bin/bash

#============================================================= Global
#========================================================== Variables

STEP0(){ DEBUG="STEP0 in install/40_USER.conf"
## Machine of interest (COMPUTE-03, HULK, ADA, MC2P or CURIE)
# MACHINE="COMPUTE-03"
}

STEP1(){ DEBUG="STEP1 in install/40_USER.conf"

## Here you can overwrite default values global variables
## Except for the machine and enventually VERSION_PKG="NONE",
## Everything should be commented

## Ability to download
# DOWN="YES"

## For PKG being OPENMPI, METIS, HDF5, CGNS, SCOTCH or SATURNE :

## PKG="YES" will compile and use the user version of PKG
## PKG="NO"  will use but not compile the user version of PKG
## PKG="SYS" will use the system version of PKG
## PKG="USR" will let the user use his own sources
# OPENMPI="NO"
# METIS="NO"
# HDF5="NO"
# CGNS="NO"
# SCOTCH="NO"


## VERSION_PKG="NUMBER" will specify which version of PKG to use
## VERSION_PKG="NONE"   will not use the PKG at all
 VERSION_METIS="NONE"
 VERSION_HDF5="NONE"

## FICH_PKG will specify the name of the PKG
# FICH_HDF5="hdf5-$VERSION_HDF5.tar.gz"

## LNK_PKG will specify the link to download PKG
# LNK_SCOTCH="https://gforge.inria.fr/frs/download.php/31831/scotch_$VERSION_SCOTCH.tar.gz"


## OPENMP="YES" will use openmp and threads
## OPENMP="NO"  will not use openmp and threads
# OPENMP="NO"

## COMP="ICC" will use intel compiler
## COMP="GCC" will use gnu compiler
# COMP="ICC"

## Extra configure options for code_saturne
# EXTRA_CONF="$EXTRA_CONF"
}


#========================================================= Adaptation
#===================================================== To the machine


STEP2(){ DEBUG="STEP2 in install/40_USER.conf"
## Everything should be commented

## Clean loaded modules
# module purge  > /dev/null 2>&1

## Which module to load
## Please add them to the module list
# module load cmake
# MODULES_LIST="$MODULES_LIST cmake"

## You may need to export some variables like
## CPATH, PATH, LD_LIBRARY_PATH
## Please add them to the export list
# export CPATH="$MKL_INCDIR:$CPATH"
# EXPORT_LIST="$EXPORT_LIST CPATH"

## Extra configure options for code_saturne
# EXTRA_CONF="$EXTRA_CONF"


  #                                     +-----------------+
  #                                     | Point of origin |
  #                                     |      BASE       |
  #                                     +-------+---------+
  #                                             |
  #             +--------------------+----------+------+------------------+
  #             |                    |                 |                  |
  # +-----------+-----------+ +------+-------+ +-------+-------+ +--------+--------+
  # |__________pkg__________| |_____src______| |______lib______| |__code_saturne___|
  # |   Where the source    | |  Where the   | | Where are put | |  Where are put  |
  # | package is downloaded | |   sources    | | the BINaries  | |  the BINaries   |
  # |   automatically or    | |     are      | |  of the libs  | | of code_saturne |
  # |       manually        | | decompressed | +---------------+ +-----------------+
  # +-----------------------+ +------+-------+
  #                                  |
  #                        +---------+---------+
  #                        |_______build_______|
  #                        | Where compilation |
  #                        |      is done      |
  #                        +-------------------+

## Where are the sources of PKG (generally for using user version)
# SRC_SATURNE="/FILE/PATH"
## Where PKG is built (generally for using user version)
# BUILD_SATURNE="/FILE/PATH"
## Where PKG is installed 
# BIN_SATURNE="/FILE/PATH"

}


#======================================================== Compilators
#============================================================ Options


STEP3(){ DEBUG="STEP3 in install/40_USER.conf"
## Which compilators to use :

## Sequential C compilator       
#  S_CC="gcc"                   
## Sequential FORTRAN compilator 
#  S_FC="gfortran"              
## Sequential FORTRAN 77 compilator 
# S_F77="gfortran"                 
## Sequential C++ compilator      
# S_CXX="g++"                    

## Parallel C compilator
#  P_CC="mpicc"
## Parallel FORTRAN compilator
#  P_FC="mpif90"
## Parallel FORTRAN 77 compilator
# P_F77="mpif77"
## Parallel C++ compilator
# P_CXX="mpicxx"

## FLAGS="$FLAGS_OPTIM"  will compile an optimized build
## FLAGS="$FLAGS_DEBUG"  will compile an debug build
 FLAGS="$FLAGS_OPTIM" # MANDATORY

## You may also want to change other flags
#    FLAGS_LTO=""
#    FLAGS_GRAPHITE=""
#    FLAGS_WARNING=""
#    FLAGS_OPENMP=""
#    FLAGS_C=""

}

STEP6(){ DEBUG="STEP6 in install/40_USER.conf"
## Things to do before building code_saturne 
## For exemple patch the sources
}

STEP8(){ DEBUG="STEP8 in install/40_USER.conf"
## After building code_saturne (patch)
}


STEP$1 2>/dev/null


