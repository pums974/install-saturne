#! /bin/bash

# If user version set the version number
# and where to download the package
# this is unecessary if one want to do it manually
STEP1(){ DEBUG="STEP1 in install/14_SCOTCH.conf"
        LIST_PKG="$LIST_PKG SCOTCH"
         SCOTCH="YES" 
 VERSION_SCOTCH="6.0.0" 
    FICH_SCOTCH="scotch_$VERSION_SCOTCH.tar.gz"       
     LNK_SCOTCH="https://gforge.inria.fr/frs/download.php/31831/scotch_$VERSION_SCOTCH.tar.gz"
}

# Set some vars
# this is unecessary if one want to do it manually
STEP2(){ DEBUG="STEP2 in install/14_SCOTCH.conf"
  if [ ! "$SCOTCH" = "SYS" ]&&[ ! "$VERSION_SCOTCH" = "NONE" ]; then
      SRC_SCOTCH="$BASE/src/scotch_$VERSION_SCOTCH"
    BUILD_SCOTCH="$SRC_SCOTCH/src"
      BIN_SCOTCH="$BASE/lib/scotch"
  fi
}

# Compile hdf5
# you must have prepared the environment
# with appropriate exports and module load
# the simpliest way consists in
# cd $BUILD_SCOTCH
# create Makefile.inc inspired by the content of RESSOURCES
# make -j8 ptscotch
# make prefix="$BIN_SCOTCH" install
STEP5(){  DEBUG="STEP5 in install/14_SCOTCH.conf"
if [ ! "$VERSION_SCOTCH" = "NONE" ]&&[ "$SCOTCH" = "YES" ]; then
  echo -n "SCOTCH      "
  download $FICH_SCOTCH $LNK_SCOTCH
  if [ ! -d $BUILD_SCOTCH ] ; then mkdir -p $BUILD_SCOTCH ; fi
  cd $BUILD_SCOTCH
  echo -n " - Building : conf"
  NCFLAGS="$CFLAGS"$([[ $OPENMP == "YES" ]] && echo " -DCOMMON_PTHREAD ")
  tac $BASE/install/RESSOURCES \
               | grep 'MAKEFILE.IN.SCOTCH BEGIN' -B 50 -m1 | tac\
               | grep 'MAKEFILE.IN.SCOTCH END' -B 50 -m1 | head -n-1 | tail -n+2 \
               | sed "s:#CFLAGS#:$NCFLAGS:g" \
               | sed "s:#LDFLAGS#:$LDFLAGS:g" \
               | sed "s:#S_CC#:$S_CC:g" \
               | sed "s:#P_CC#:$P_CC:g" > ./Makefile.inc 2> config.1.log || STOP
  echo -n " - make"
  make -j8 ptscotch               > make.1.log 2>&1 || STOP
  echo -n " - install"
  if [ -d $BIN_SCOTCH ] ; then rm -r $BIN_SCOTCH ;fi
  mkdir -p $BIN_SCOTCH
  make prefix="$BIN_SCOTCH" install > make.2.log 2>&1 || STOP
  echo -e " - \e[32m\e[1mOK\e[21m\e[0m"
  cd $BASE
fi
}

STEP$1 2>/dev/null

