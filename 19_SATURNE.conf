#! /bin/bash

# Set the version number
# and where to download the package
# this is unecessary if one want to do it manually
STEP0(){ DEBUG="STEP0 in install/19_SATURNE.conf"
  SATURNE="CMP" 
VERSION_SATURNE="3.2.1"  
        LIST_PKG="$LIST_PKG SATURNE"
    BIN_SATURNE=$PREFIX/code_saturne
}

# Set some vars
# this is unecessary if one want to do it manually
STEP2(){ DEBUG="STEP2 in install/19_SATURNE.conf"

 FICH_SATURNE="code_saturne-$VERSION_SATURNE.tar.gz" 
 LNK_SATURNE="http://code-saturne.org/cms/sites/default/files/releases/code_saturne-$VERSION_SATURNE.tar.gz"

    SRC_SATURNE=$PREFIX/src/code_saturne-$VERSION_SATURNE
  BUILD_SATURNE=$SRC_SATURNE/build
}


# Compile code_saturne
# you must have prepared the environment
# with appropriate exports and module load
# the simpliest way consists in
# cd $BUILD_SATURNE
# ./configure --prefix=$BIN_SATURNE --without-libxml2 --with-mpi=$BIN_OPENMPI \
#    --disable-gui --without-salome-gui --without-salome-kernel --disable-openmp \
#    --without-scotch --without-hdf5 --without-metis --with-cgns=$BIN_CGNS \
#     --with-blas CPPFLAGS="-lm" --disable-shared
# make -j8
# make pdf 
# make install      
# make install-pdf 
STEP7(){ DEBUG="STEP7 in install/19_SATURNE.conf"
if [ "$SATURNE" = "CMP" ]; then
  echo -n "CODE_SATURNE"
  download $FICH_SATURNE $LNK_SATURNE
  if [ ! -d $BUILD_SATURNE ] ; then mkdir -p $BUILD_SATURNE ; fi
  cd $BUILD_SATURNE
  echo -n " - Building : conf"
  export FC=$S_FC
  ../configure --prefix=$BIN_SATURNE --without-libxml2 --with-mpi=$BIN_OPENMPI\
    --disable-gui --without-salome-gui --without-salome-kernel \
          $([[ $OPENMP == "YES" ]] && echo   "--enable-openmp") \
          $([[ $OPENMP == "NO" ]]  && echo  "--disable-openmp") \
$([[ ! $VERSION_SCOTCH == "NONE" ]] && echo    "--with-scotch=$BIN_SCOTCH") \
  $([[ $VERSION_SCOTCH == "NONE" ]] && echo "--without-scotch") \
  $([[ ! $VERSION_HDF5 == "NONE" ]] && echo      "--with-hdf5=$BIN_HDF5") \
    $([[ $VERSION_HDF5 == "NONE" ]] && echo   "--without-hdf5") \
 $([[ ! $VERSION_METIS == "NONE" ]] && echo     "--with-metis=$BIN_METIS") \
   $([[ $VERSION_METIS == "NONE" ]] && echo  "--without-metis") \
  $([[ ! $VERSION_CGNS == "NONE" ]] && echo      "--with-cgns=$BIN_CGNS") \
    $([[ $VERSION_CGNS == "NONE" ]] && echo   "--without-cgns") \
    --with-blas CPPFLAGS="-lm" \
    --disable-shared $EXTRA_CONF > config.1.log 2>&1 || STOP
  echo -n " - make"
  make -j8         > make.1.log 2>&1 || STOP
  echo -n " docs"
  make pdf         > make.2.log 2>&1 || STOP
  echo -n " - install"
  if [ -d $BIN_SATURNE ] ; then rm -r $BIN_SATURNE ;fi
  mkdir -p $BIN_SATURNE
  make install     > make.3.log 2>&1 || STOP
  echo -n " pdf"
  make install-pdf > make.4.log 2>&1 || STOP
  echo -e " - \e[32m\e[1mOK\e[21m\e[0m"
  cd $PREFIX
fi
}

STEP9(){ DEBUG="STEP9 in install/19_SATURNE.conf"
echo "if [ -f /etc/bash_completion ] && ! shopt -oq posix; then"
echo "    . $BIN_SATURNE/etc/bash_completion.d/code_saturne"
echo "fi"
}

STEP$1 2>/dev/null


